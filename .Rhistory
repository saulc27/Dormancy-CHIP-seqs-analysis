abline(v=0)
abline(v=c(-0.5,0.5), col="brown")
abline(h=-log10(alpha), col="brown")
gn.selected <- abs(res$log2FoldChange) > 1.4 & res$padj < alpha
text(res$log2FoldChange[gn.selected],
-log10(res$padj)[gn.selected],
lab=rownames(res)[gn.selected ], cex=1.2)
alpha <- 0.05 # Threshold on the adjusted p-value
cols <- densCols(res2$log2FoldChange, -log10(res2$pvalue))
plot(res2$log2FoldChange, -log10(res2$padj), col=cols, panel.first=grid(),
main="Volcano plot", xlab="Effect size: log2(fold-change)", ylab="-log10(adjusted p-value)", xlim = c(-2,2), ylim = c(0,30), pch=20, cex=0.9, cex.lab=2.0)
abline(v=0)
abline(v=c(-0.5,0.5), col="brown")
abline(h=-log10(alpha), col="brown")
gn.selected <- abs(res$log2FoldChange) > 1.4 & res$padj < alpha
text(res$log2FoldChange[gn.selected],
-log10(res$padj)[gn.selected],
lab=rownames(res)[gn.selected ], cex=1.2)
alpha <- 0.05 # Threshold on the adjusted p-value
cols <- densCols(res2$log2FoldChange, -log10(res2$pvalue))
plot(res2$log2FoldChange, -log10(res2$padj), col=cols, panel.first=grid(),
main="Volcano plot", xlab="Effect size: log2(fold-change)", ylab="-log10(adjusted p-value)", xlim = c(-2,2), ylim = c(0,30), pch=20, cex=0.9, cex.lab=2.0, width = 10
abline(v=0)
abline(v=c(-0.5,0.5), col="brown")
abline(h=-log10(alpha), col="brown")
gn.selected <- abs(res$log2FoldChange) > 1.4 & res$padj < alpha
text(res$log2FoldChange[gn.selected],
-log10(res$padj)[gn.selected],
lab=rownames(res)[gn.selected ], cex=1.2)
alpha <- 0.05 # Threshold on the adjusted p-value
cols <- densCols(res2$log2FoldChange, -log10(res2$pvalue))
plot(res2$log2FoldChange, -log10(res2$padj), col=cols, panel.first=grid(),
main="Volcano plot", xlab="Effect size: log2(fold-change)", ylab="-log10(adjusted p-value)", xlim = c(-2,2), ylim = c(0,30), pch=20, cex=0.9, cex.lab=2.0, width = 10)
abline(v=0)
abline(v=c(-0.5,0.5), col="brown")
abline(h=-log10(alpha), col="brown")
gn.selected <- abs(res$log2FoldChange) > 1.4 & res$padj < alpha
text(res$log2FoldChange[gn.selected],
-log10(res$padj)[gn.selected],
lab=rownames(res)[gn.selected ], cex=1.2)
alpha <- 0.05 # Threshold on the adjusted p-value
cols <- densCols(res2$log2FoldChange, -log10(res2$pvalue))
plot(res2$log2FoldChange, -log10(res2$padj), col=cols, panel.first=grid(),
main="Volcano plot", xlab="Effect size: log2(fold-change)", ylab="-log10(adjusted p-value)", xlim = c(-2,2), ylim = c(0,30), pch=20, cex=0.9, cex.lab=1.8)
abline(v=0)
abline(v=c(-0.5,0.5), col="brown")
abline(h=-log10(alpha), col="brown")
gn.selected <- abs(res$log2FoldChange) > 1.4 & res$padj < alpha
text(res$log2FoldChange[gn.selected],
-log10(res$padj)[gn.selected],
lab=rownames(res)[gn.selected ], cex=1.2)
1+1
2**2
2**7
add = 1+1
substract = 3-2
add
x <- panda
x -> panda
x -> "panda"
x <- "panda"
x + add
food = c("apple","banana","grape")
food <- c("apple","banana","grape")
food
num = c(1,2,3,4,5,)
num = c(1,2,3,4,5)
num
mix <- c(1,"apple",3,"hello")
mix
num = 1:100
num
numbers = 200:300
numbres
numbers
numbers[1]
numbers[60]
numbers[60:50]
numbers[3,5,7]
numbers[3]
numbers[c(3,5,7)]
col1 = 0:4
col1
col2 = 5:9
col2
cbind(col1, col2)
col3 = 10:14
cbind(col1, col2, col3)
mat = cbind(col1, col2, col3)
mat[1,1]
mat[1,2]
mat[1,3]
mat[1:3,3]
x <- mat[1:3,3]
x <- mat[1:3,]
mat[1:3,]
mat[1:3,7:8]
mat[1:2,1:3]
mat[1:2,]
mat[,3]
#shdahd
# Data frame vs Matrices
## Data frame vs Matrices
data.table(file = "../../../saulc/Documents/School/R class/heart.csv")
read.table(file = "../../../saulc/Documents/School/R class/heart.csv")
read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",")
read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
hear <- read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
heart <- read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
View(hear)
heart <- read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
head(heart)
head(heart, n = 5)
head(heart, n = 10)
hear[1:10, 2]
hear[1:10, c(2,4)]
hear[1:10,]
hear[c(1,3,5),]
hear$restecg
hear$chol
hear$sex > 0
heart[hear$sex = 0, ]
heart[hear$sex == 0, ]
nrow(heart)
newcol = 1:303
heart$newcol = 1:303
head(heart)
sum(heart$sex)
factor(heart$sex)
sum(heart$sex)
heart$sex = factor(heart$sex)
sum(heart$sex)
heart
typeof(heart$sex)
str(heart$sex)
head(heart)
plot(hear$age, hear$chol)
mean(heart$age)
mean(hear$age)
mean(heart$age)
heart <- read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
mean(heart$age)
mean(heart$age)
hist(hear$age)
heart <- read.table(file = "../../../saulc/Documents/School/R class/heart.csv", sep =",", header = TRUE)
hist(hear$age)
hist(heart$age)
as.numeric(heart$age)
as.numeric(heart$age)
hist(heart$age)
read.table(file = "../../Documents/School/R class/heart.csv")
heart = read.table(file = "../../Documents/School/R class/heart.csv", header = TRUE, sep = ",")
mean(heart$age)
heart = read.table(file = ../../Documents/School/R class/heart.csv", header = TRUE, sep = ",")
heart = read.table(file = "../../Documents/School/R class/heart.csv", header = TRUE, sep = ","")
heart = read.table(file = "../../Documents/School/R class/heart.csv", header = TRUE, sep = ",")
mean(heart$age)
tab = table(heart$sex)
tab
hist(heart$sex)
hist(heart$chol)
mean(heart$chol)
heart[heart$sex == 0, "chol"]
fem.chol <- heart[heart$sex == 0, "chol"]
male.chol <- heart[heart$sex == 1, "chol"]
male.chol
hist(fem.chol)
hist(male.chol)
t.test(fem.chol, male.chol)
t.test(fem.chol, male.chol, alternative = "greater")
head(heart)
fem.hd = heart[heart$sex ==0, "target"]
mal.hd = heart[heart$sex ==1, "target"]
table(fem.hd)
table(mal.hd)
cbind(c(24,72), c(114,93))
chisq.test( cbind(c(24,72), c(114,93)))
1:10
1:10
load("C:/Users/saulc/Documents/School/BernsteinLab/RNAseq R/147/Skmel147ARID2KDr3r4/R analysis/ARID2Kdr3r4.RData")
library(DESeq2)
library(DESeq2)
library(ggplot2)
ARID2KD <- fc$counts[c(1,2,3,4,5,6),]
source('~/.active-rstudio-document')
ARID2KD <- fc$counts[c(1,2,3,4,5,6),]
colnames(ARID2KD) <- c("shSCR.1","shSCR.2","sh264.1","sh264.2","sh321.1","sh321.2")
condition <- factor(c("shSCR","shSCR","KD1","KD1","KD2","KD2"))
ARID2KD <- fc$counts[c(1,2,3,4,5,6),]
colnames(ARID2KD) <- c("shSCR.1","shSCR.2","sh264.1","sh264.2","sh321.1","sh321.2")
View(ARID2KD)
ARID2KD <- fc$counts[c(1,2,3,4,5,6),]
View(ARID2KD)
ARID2KD <- fc$counts[,c(1,2,3,4,5,6)]
View(ARID2KD)
colnames(ARID2KD) <- c("shSCR.1","shSCR.2","sh264.1","sh264.2","sh321.1","sh321.2")
condition <- factor(c("shSCR","shSCR","KD1","KD1","KD2","KD2"))
coldata <- data.frame(row.names=colnames(ARID2KD), condition)
dds <- dds[ rowSums(counts(dds)) > 100, ]
dds$condition <- relevel(dds$condition, "WT")
dds <- estimateSizeFactors(dds)
norm.counts <- counts(dds, normalized=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
ARID2KD <- fc$counts[,c(1,2,3,4,5,6)]
colnames(ARID2KD) <- c("shSCR.1","shSCR.2","sh264.1","sh264.2","sh321.1","sh321.2")
condition <- factor(c("shSCR","shSCR","KD1","KD1","KD2","KD2"))
coldata <- data.frame(row.names=colnames(ARID2KD), condition)
dds <- dds[ rowSums(counts(dds)) > 100, ]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#PCA plot
pcaData <- plotPCA(rld, intgroup=c("condition"), returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
pcaplot <- ggplot(pcaData, aes(PC1, PC2,color=condition, label=condition))+
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
coord_fixed()
pal <- c("#006400","#DC143C", "#000080")
#Dark green, Crimson, Navy
names(pal) <- levels(condition)
colScale <- scale_colour_manual(name = "Condition",values = pal)
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_minimal() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
source('~/.active-rstudio-document', echo=TRUE)
pcaplot + geom_label(aes(label = name), position = nudg, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_bw() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
#Dark green, Crimson, Navy
names(pal) <- levels(condition)
colScale <- scale_colour_manual(name = "Condition",values = pal)
pcaplot + geom_label(aes(label = name), show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_minimal() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
nudge <- position_nudge(y = 1)
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_minimal() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_be() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_bw() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
source('~/.active-rstudio-document', echo=TRUE)
load("C:/Users/saulc/Documents/School/BernsteinLab/Genomics/RNAseq R/147/Skmel147ARID2KDr3r4/R analysis/ARID2Kdr3r4.RData")
source('~/.active-rstudio-document', echo=TRUE)
enrichment_chart(RA_output.sh264[1:20,])
pheatmap(sh264.up.and.sig.mat[1:25,], scale = "row")
pheatmap(sh264.down.and.sig.mat[1:25,], scale = "row")
RA_output.sh264.MF <- run_pathfindR(path.findr.sh264, gene_sets = "GO-MF")
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[2:10,])
enrichment_chart(RA_output.sh264.MF[1:5,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[2:10,])
View(res.sh264)
View(path.findr.sh264)
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1
library(swirl)
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
list.dirs()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir/")
file.create(mytest.R)
file.create("mytest.R")
list.dirs
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
getwd()
?dir.create
file.path(dir.create("testdir2"), "testdir.3")
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
add2 <- function(x, y) {x+y}
add2(3,5)
above <- function(x, n){
use <- x> n
x[use]
}
x<- 1:20
above(x, 12)
library(swirl)
swirl()
submit90
submit()
submit()
submit()
submit()
submit()
reminder(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
(4, div = 2)
remainder(4, div = 2)
args(remainder)
submit()
submit()
submit()
submit()
submit
submit()
evaluate(stderr, c(1.4, 3.6, 7.9, 8.8))
evaluate(stderr, x = c(1.4, 3.6, 7.9, 8.8))
evaluate(stderr, dat = c(1.4, 3.6, 7.9, 8.8))
submit()
submit()
evaluate(sd, dat = c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){[1]}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){y<-length(x) x[y]}, c(8, 4, 0))
evaluate(function(x){y<-length(x)}, c(8, 4, 0))
evaluate(function(x){length(x)}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("Hello", "there")
info()
bye()
swirl()
submit
submit()
submit()
mad_libs(place = "here", adjective = "good", noun = "dog" )
submit
submit()
"I%p%love%p%R"
"I %p% love %p% R"
'I %p% love %p% R'
'I' %p% 'love' %p% 'R'
""I" %p% "love" %p% "R"
I" %p% "love" %p% "R"
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R" %p%
''
""I" %p% "love" %p% "R""
info()
skip()
bye()
clear
library(swirl)
swirl()
(flags)
head(flags)
?info
info()
main()
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
View(cls_list)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
ssh
library(RCurl)
scp?
0
?scp
install.packages("ssh")
library(ssh)
session <- ssh_connect(carcas@minerva.hcp.mssm.edu)
session <- ssh_connect(carcas01@minerva.hcp.mssm.edu)
session <- ssh_connect(minerva.hcp.mssm.edu)
session <- ssh_connect("carcas01@minerva.hcp.mssm.edu")
session <- ssh_connect("carcas01@minerva.hpc.mssm.edu")
05011989sgcz!446216
clear
clear
getwd()
ls()
list.files()
list.dirs()
session
library(DBI)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};")
setwd("C:/Users/saulc/Documents/School/BernsteinLab/Genomics/Chipseq/Dhep Thep/beds/Analysis/git-repo")
session <- ssh_connect("carcas01@minerva.hpc.mssm.edu")
library(dplyr)
library(plyr)
library(plyr)
#active promoters
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
read.2mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-2mb-extended-with-promoters.bed", header = F)
rm(read.2mb.enhancer.promoter.table)
#SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$SE.CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
View(Trimmed.SE.only.with.promoters)
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
View(RNA.seq.SE.table.promoters.filtered)
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(dplyr)
library(plyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(plyr)
#active promoters
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
#SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$SE.CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(plyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(dplyr)
library(dplyr)
