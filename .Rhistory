pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + theme_bw() + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
pcaplot + geom_label(aes(label = name), position = nudge, show.legend = F) +colScale + theme_bw() + geom_point(size=3) + ggtitle("Skmel147 ARID2 KD", subtitle = "PCA plot") + theme(plot.title = element_text(hjust = 0.5, size = 15), plot.subtitle = element_text(hjust=0.5),legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid'))
source('~/.active-rstudio-document', echo=TRUE)
load("C:/Users/saulc/Documents/School/BernsteinLab/Genomics/RNAseq R/147/Skmel147ARID2KDr3r4/R analysis/ARID2Kdr3r4.RData")
source('~/.active-rstudio-document', echo=TRUE)
enrichment_chart(RA_output.sh264[1:20,])
pheatmap(sh264.up.and.sig.mat[1:25,], scale = "row")
pheatmap(sh264.down.and.sig.mat[1:25,], scale = "row")
RA_output.sh264.MF <- run_pathfindR(path.findr.sh264, gene_sets = "GO-MF")
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[2:10,])
enrichment_chart(RA_output.sh264.MF[1:5,])
enrichment_chart(RA_output.sh264.MF[1:10,])
enrichment_chart(RA_output.sh264.MF[2:10,])
View(res.sh264)
View(path.findr.sh264)
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1
library(swirl)
swirl()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
list.dirs()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir/")
file.create(mytest.R)
file.create("mytest.R")
list.dirs
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
getwd()
?dir.create
file.path(dir.create("testdir2"), "testdir.3")
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
add2 <- function(x, y) {x+y}
add2(3,5)
above <- function(x, n){
use <- x> n
x[use]
}
x<- 1:20
above(x, 12)
library(swirl)
swirl()
submit90
submit()
submit()
submit()
submit()
submit()
reminder(5)
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
(4, div = 2)
remainder(4, div = 2)
args(remainder)
submit()
submit()
submit()
submit()
submit
submit()
evaluate(stderr, c(1.4, 3.6, 7.9, 8.8))
evaluate(stderr, x = c(1.4, 3.6, 7.9, 8.8))
evaluate(stderr, dat = c(1.4, 3.6, 7.9, 8.8))
submit()
submit()
evaluate(sd, dat = c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){[1]}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){y<-length(x) x[y]}, c(8, 4, 0))
evaluate(function(x){y<-length(x)}, c(8, 4, 0))
evaluate(function(x){length(x)}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("Hello", "there")
info()
bye()
swirl()
submit
submit()
submit()
mad_libs(place = "here", adjective = "good", noun = "dog" )
submit
submit()
"I%p%love%p%R"
"I %p% love %p% R"
'I %p% love %p% R'
'I' %p% 'love' %p% 'R'
""I" %p% "love" %p% "R"
I" %p% "love" %p% "R"
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R" %p%
''
""I" %p% "love" %p% "R""
info()
skip()
bye()
clear
library(swirl)
swirl()
(flags)
head(flags)
?info
info()
main()
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
View(cls_list)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
ssh
library(RCurl)
scp?
0
?scp
install.packages("ssh")
library(ssh)
session <- ssh_connect(carcas@minerva.hcp.mssm.edu)
session <- ssh_connect(carcas01@minerva.hcp.mssm.edu)
session <- ssh_connect(minerva.hcp.mssm.edu)
session <- ssh_connect("carcas01@minerva.hcp.mssm.edu")
session <- ssh_connect("carcas01@minerva.hpc.mssm.edu")
05011989sgcz!446216
clear
clear
getwd()
ls()
list.files()
list.dirs()
session
library(DBI)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};")
setwd("C:/Users/saulc/Documents/School/BernsteinLab/Genomics/Chipseq/Dhep Thep/beds/Analysis/git-repo")
session <- ssh_connect("carcas01@minerva.hpc.mssm.edu")
library(dplyr)
library(plyr)
library(plyr)
#active promoters
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
read.2mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-2mb-extended-with-promoters.bed", header = F)
rm(read.2mb.enhancer.promoter.table)
#SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$SE.CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
View(Trimmed.SE.only.with.promoters)
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
View(RNA.seq.SE.table.promoters.filtered)
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(dplyr)
library(plyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(plyr)
#active promoters
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
#SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$SE.CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$Distance.Kb <- abs((Trimmed.SE.only.with.promoters$SE.CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(plyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(SE_Distance_rank = order(order(Distance.Kb, decreasing=F)))
library(dplyr)
library(dplyr)
library(plyr)
#active promoters
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$distance.kb <- abs((Trimmed.SE.only.with.promoters$CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
library(plyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
library(dplyr)
View(Trimmed.SE.only.with.promoters)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
View(SE.only.with.promoters)
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$distance.kb <- abs((Trimmed.SE.only.with.promoters$CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
View(Trimmed.SE.only.with.promoters)
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
SE.table.promoters.RNA.seq.THEP <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
SE.table.promoters.RNA.seq.THEP <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
View(SE.table.promoters.RNA.seq.THEP)
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
View(THEP.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
str(THEP.SE.table.promoters.RNA.seq)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
View(THEP.SE.table.promoters.RNA.seq)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$distance.kb)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$baseMean)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, log2(THEP.SE.table.promoters.RNA.seq$baseMean))
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
cor.test(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
lm(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
lm(THEP.SE.table.promoters.RNA.seq$log2FoldChange ~ THEP.SE.table.promoters.RNA.seq$distance.kb)
abline(lm(THEP.SE.table.promoters.RNA.seq$log2FoldChange ~ THEP.SE.table.promoters.RNA.seq$distance.kb))
plot(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
abline(1.38, -0.0012)
abline(lm(THEP.SE.table.promoters.RNA.seq$log2FoldChange ~ THEP.SE.table.promoters.RNA.seq$distance.kb))
plot(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
#back to numeric for filtering
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.numeric(THEP.SE.table.promoters.RNA.seq$my_ranks )
#filtering by distance and gene log2FC
THEP.SE.table.promoters.RNA.seq %>%  filter(!(log2FoldChange>0.5 & distance.kb > 500))
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange>0.5 & distance.kb > 500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5 & distance.kb > 500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5 && distance.kb > 500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5 && distance.kb > 500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5))
View(THEP.SE.table.promoters.RNA.seq)
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
#Convert Ranks to factor type
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
#back to numeric for filtering
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.numeric(THEP.SE.table.promoters.RNA.seq$my_ranks )
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(log2FoldChange> 0.5)
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
cor.test(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
View(THEP.SE.table.promoters.RNA.seq)
View(THEP.SE.table.promoters.RNA.seq)
write.csv(THEP.SE.table.promoters.RNA.seq, file = "SE.genes.table.THEP3.csv")
read.promoter.counts <- read.table(file = "../Promoters-with-DHEP3-THEP3-H3K27ac-and-BM-NR2F1-counts.csv", sep = ",", header = TRUE)
#RNAseq table
read.rnaseq.results <- read.table(file = "../DvT.RNAseq.results.csv", sep = ",", header = TRUE)
#ROSe enhancer table
all.enhancers.table <- read.table(file = "../DHEP-THEP-H3K27ac-merged-q1e-3_filtered_AllEnhancers.table.txt", header = TRUE)[,c(1,2,3,4,10,12,13,14)]
#Enhancer promoter tables (bedtools)
read.1mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-1mb-extended-with-promoters.bed", header = F)
#read.2mb.enhancer.promoter.table <- read.table(file ="DHEP-THEP-H3K27ac-merged-q1e-3_filtered_Enhancers_withSuper-2mb-extended-with-promoters.bed", header = F)
#SE only with Log2Fc cutoff
SE.only.table <- all.enhancers.table[all.enhancers.table$isSuper==1,]
SE.only.table$log2FC  <- log2(SE.only.table$THEP_H3K27ac.XL.final.bam/SE.only.table$DHEP_H3K27ac.XL.final.bam)
SE.only.table$CENTER <- as.integer((SE.only.table$START+SE.only.table$STOP)/2)
SE.only.table.DF <- SE.only.table[which(SE.only.table$log2FC>1.5 | SE.only.table$log2FC< -1.5),]
#Merging DF SE enhancer table with promoters removing dups
SE.only.with.promoters <- merge(read.1mb.enhancer.promoter.table, SE.only.table.DF, by.x = "V4", by.y="REGION_ID")
SE.only.with.promoters <- SE.only.with.promoters[!duplicated(SE.only.with.promoters),]
Trimmed.SE.only.with.promoters <- SE.only.with.promoters[,c(-2,-3,-4,-5,-13,-14,-15,-16)]
Trimmed.SE.only.with.promoters$TSS <- as.integer((Trimmed.SE.only.with.promoters$V7+Trimmed.SE.only.with.promoters$V8)/2)
Trimmed.SE.only.with.promoters$distance.kb <- abs((Trimmed.SE.only.with.promoters$CENTER - Trimmed.SE.only.with.promoters$TSS)/1000)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
#Convert Ranks to factor type
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
#back to numeric for filtering
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.numeric(THEP.SE.table.promoters.RNA.seq$my_ranks )
#filtering by distance and gene log2FC
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5 & distance.kb>500))
library(dplyr)
Trimmed.SE.only.with.promoters <-   Trimmed.SE.only.with.promoters %>%
group_by(V4) %>%
mutate(my_ranks = order(order(distance.kb, decreasing=F)))
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
#Convert Ranks to factor type
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
#back to numeric for filtering
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.numeric(THEP.SE.table.promoters.RNA.seq$my_ranks )
#filtering by distance and gene log2FC
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.5 & distance.kb>500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 1 & distance.kb>500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.9 & distance.kb>500))
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(log2FoldChange< 0.5)
View(THEP.SE.table.promoters.RNA.seq)
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- SE.table.promoters.RNA.seq.THEP[!duplicated(SE.table.promoters.RNA.seq.THEP),]
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.9 & distance.kb>500))
#merging with RNAseq table and filtering lower expressed genes
RNA.seq.SE.table.promoters<- merge(Trimmed.SE.only.with.promoters , read.rnaseq.results, by.x="V9", by.y="rn")
RNA.seq.SE.table.promoters.filtered<- RNA.seq.SE.table.promoters[RNA.seq.SE.table.promoters$baseMean>500,]
THEP.SE.table.promoters.RNA.seq <- RNA.seq.SE.table.promoters.filtered[RNA.seq.SE.table.promoters.filtered$log2FC>1,]
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq[!duplicated(THEP.SE.table.promoters.RNA.seq),]
#Convert Ranks to factor type
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
#back to numeric for filtering
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.numeric(THEP.SE.table.promoters.RNA.seq$my_ranks )
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(!(log2FoldChange< 0.9 & distance.kb>500))
THEP.SE.table.promoters.RNA.seq <- THEP.SE.table.promoters.RNA.seq %>%
filter(log2FoldChange> 0.5)
View(THEP.SE.table.promoters.RNA.seq)
THEP.SE.table.promoters.RNA.seq$my_ranks <- as.factor(THEP.SE.table.promoters.RNA.seq$my_ranks )
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$distance.kb, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
test.cor(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
cor.test(THEP.SE.table.promoters.RNA.seq$log2FoldChange, THEP.SE.table.promoters.RNA.seq$distance.kb)
View(THEP.SE.table.promoters.RNA.seq)
cor.test(THEP.SE.table.promoters.RNA.seq$baseMean, THEP.SE.table.promoters.RNA.seq$distance.kb)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$distance.kb)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$distance.kb, xlab="Enhnacer proximity", ylab="Log2FC")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$distance.kb, xlab="Enhnacer proximity", ylab="Log2FC")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange)
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC", main="Fold change vs Proximity to SE")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC", main=" Gene Log2 Fold change vs Proximity to SE")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC", main=" Gene Log2 Fold change vs Proximity to SE", col= "chocolate")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC", main=" Gene Log2 Fold change vs Proximity to SE", col= "blue")
?col
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$log2FoldChange, xlab="Enhnacer proximity", ylab="Log2FC", main=" Gene Log2 Fold change vs Proximity to SE", col= "darkgoldenrod1")
plot(THEP.SE.table.promoters.RNA.seq$my_ranks, THEP.SE.table.promoters.RNA.seq$distance.kb)
write.csv(THEP.SE.table.promoters.RNA.seq, file = "SE.genes.table.THEP3.csv")
Final.THEP.SE.table.promoters.RNA.seq <- select(THEP.SE.table.promoters.RNA.seq, V9, V6, V7, V8, V4, CHROM, START, STOP, CENTER )
View(Final.THEP.SE.table.promoters.RNA.seq)
Final.THEP.SE.table.promoters.RNA.seq <- select(THEP.SE.table.promoters.RNA.seq, V9, V6, V7, V8, TSS, V4, CHROM, START, STOP, CENTER, distance.kb, my_ranks,
log2FC, log2foldchange, basemean,padj)
Final.THEP.SE.table.promoters.RNA.seq <- select(THEP.SE.table.promoters.RNA.seq, V9, V6, V7, V8, TSS, V4, CHROM, START, STOP, CENTER, distance.kb, my_ranks,
log2FC, log2FoldChange, basemean,padj)
Final.THEP.SE.table.promoters.RNA.seq <- select(THEP.SE.table.promoters.RNA.seq, V9, V6, V7, V8, TSS, V4, CHROM, START, STOP, CENTER, distance.kb, my_ranks,
log2FC, log2FoldChange, baseMean,padj)
View(Final.THEP.SE.table.promoters.RNA.seq)
colnames(Final.THEP.SE.table.promoters.RNA.seq) <- c("GENE.SYMBOL","PROMOTER.CHROM","PROMOTER.START","PROMOTER.END","PROMOTER.TSS","SE.PEAK",
"SE.START", "SE.END", "SE.CENTER","DISTANCE.PROM.ENH.KB","RANKED.DISTANCE","SE.LOG2FC",
"GENE.LOG2FC","GENE.BASEMEAN","GENE.LOG2FC.PADJ")
View(Final.THEP.SE.table.promoters.RNA.seq)
colnames(Final.THEP.SE.table.promoters.RNA.seq) <- c("GENE.SYMBOL","PROMOTER.CHROM","PROMOTER.START","PROMOTER.END","PROMOTER.TSS","SE.PEAK",
"SE.START", "SE.END", "SE.CENTER","DISTANCE.PROM.ENH.KB","RANKED.DISTANCE","SE.LOG2FC",
"GENE.LOG2FC","GENE.BASEMEAN","GENE.LOG2FC.PADJ")
write.csv(Final.THEP.SE.table.promoters.RNA.seq, file = "SE.genes.table.THEP3.csv")
colnames(Final.THEP.SE.table.promoters.RNA.seq) <- c("GENE.SYMBOL","PROMOTER.CHROM","PROMOTER.START","PROMOTER.END","PROMOTER.TSS","SE.PEAK","SE.CHROM"
"SE.START", "SE.END", "SE.CENTER","DISTANCE.PROM.ENH.KB","RANKED.DISTANCE","SE.LOG2FC",
"GENE.LOG2FC","GENE.BASEMEAN","GENE.LOG2FC.PADJ")
View(Final.THEP.SE.table.promoters.RNA.seq)
colnames(Final.THEP.SE.table.promoters.RNA.seq) <- c("GENE.SYMBOL","PROMOTER.CHROM","PROMOTER.START","PROMOTER.END","PROMOTER.TSS","SE.PEAK","SE.CHROM",
"SE.START", "SE.END", "SE.CENTER","DISTANCE.PROM.ENH.KB","RANKED.DISTANCE","SE.LOG2FC",
"GENE.LOG2FC","GENE.BASEMEAN","GENE.LOG2FC.PADJ")
View(Final.THEP.SE.table.promoters.RNA.seq)
write.csv(Final.THEP.SE.table.promoters.RNA.seq, file = "SE.genes.table.THEP3.csv")
